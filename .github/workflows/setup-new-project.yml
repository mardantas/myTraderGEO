name: Setup New Project

on:
  workflow_dispatch:
    inputs:
      project_name:
        description: 'Nome do novo projeto'
        required: true
        type: string
      project_repo_url:
        description: 'URL do repositório GitHub do novo projeto'
        required: true
        type: string

jobs:
  setup-project:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Workflow Repo
        uses: actions/checkout@v4
        with:
          path: workflow-template

      - name: Setup Git Configuration
        run: |
          git config --global user.name "DDD Workflow Bot"
          git config --global user.email "workflow-bot@example.com"

      - name: Clone New Project Repository
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Cloning ${{ inputs.project_repo_url }}..."
          git clone ${{ inputs.project_repo_url }} new-project
          cd new-project

          # Verificar se já tem conteúdo (além de .git)
          if [ "$(ls -A | grep -v '^\.git$' | wc -l)" -gt 0 ]; then
            echo "⚠️ WARNING: Repository is not empty. Proceeding with caution..."
          fi

      - name: Copy Workflow Structure
        run: |
          echo "Copying workflow structure to new project..."

          # Copiar estrutura completa (exceto .git)
          rsync -av \
            --exclude='.git' \
            --exclude='README.md' \
            --exclude='.github/workflows/setup-new-project.yml' \
            workflow-template/ new-project/

          echo "✅ Structure copied successfully"

      - name: Customize Project Files
        run: |
          cd new-project

          # Substituir placeholder [PROJECT_NAME] nos arquivos relevantes
          echo "Customizing project name in files..."

          # Substituir no README.md se existir
          if [ -f "README.md" ]; then
            sed -i "s/myTraderGEO/${{ inputs.project_name }}/g" README.md
          fi

          # Substituir no workflow-config.json se existir
          if [ -f "workflow-config.json" ]; then
            sed -i "s/myTraderGEO/${{ inputs.project_name }}/g" workflow-config.json
          fi

          echo "✅ Project files customized"

      - name: Create Initial Commit
        run: |
          cd new-project

          git add .
          git commit -m "chore: Setup inicial do DDD Workflow v1.0

          - Estrutura de 10 agentes especializados (.agents/)
          - Templates de documentação DDD
          - Templates de Issues/PRs (.github/)
          - Scripts de validação (nomenclatura + estrutura)
          - Configuração do workflow (workflow-config.json)

          Este commit estabelece a fundação do processo DDD.

          Próximo passo: Criar branch develop e executar Discovery Foundation (Issue #1)

          🚀 Ambiente pronto para início do projeto
          🤖 Automatizado via GitHub Actions"

          echo "✅ Initial commit created"

      - name: Create Develop Branch
        run: |
          cd new-project

          # Criar branch develop
          git checkout -b develop

          # Commit vazio marcando início
          git commit --allow-empty -m "chore: Início do Projeto

          Branch develop criada a partir da main.
          Pronta para receber a primeira feature (Discovery Foundation).

          Próximo passo: Criar Issue #1 (Discovery Foundation) e branch feature/discovery-foundation
          🤖 Automatizado via GitHub Actions"

          echo "✅ Develop branch created"

      - name: Push to Remote
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd new-project

          # Push main
          git checkout main
          git push origin main

          # Push develop
          git checkout develop
          git push origin develop

          echo "✅ Pushed to remote repository"


      - name: Setup Summary
        run: |
          echo "## 🎉 Project Setup Complete!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ **Project:** ${{ inputs.project_name }}" >> $GITHUB_STEP_SUMMARY
          echo "✅ **Repository:** ${{ inputs.project_repo_url }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📦 What was done:" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Workflow structure copied" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Initial commit created on \`main\`" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Branch \`develop\` created" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Pushed to remote repository" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🚀 Next Steps:" >> $GITHUB_STEP_SUMMARY
          echo "1. Clone the project locally: \`git clone ${{ inputs.project_repo_url }}\`" >> $GITHUB_STEP_SUMMARY
          echo "2. Navigate to project: \`cd $(basename ${{ inputs.project_repo_url }} .git)\`" >> $GITHUB_STEP_SUMMARY
          echo "3. Run discovery start script: \`bash .agents/templates/06-github-management/scripts/discovery-start.template.sh\`" >> $GITHUB_STEP_SUMMARY
          echo "   - This will create Issue #1, Milestone M0, branch, and PR" >> $GITHUB_STEP_SUMMARY
          echo "4. Start working on deliverables (SDA, UXD, GM, PE, SEC, QAE)" >> $GITHUB_STEP_SUMMARY
          echo "5. Commit changes as you complete each deliverable" >> $GITHUB_STEP_SUMMARY
          echo "6. When done, mark PR as ready for review" >> $GITHUB_STEP_SUMMARY

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📚 **Documentation:** See [README.md](README.md) for complete workflow guide" >> $GITHUB_STEP_SUMMARY
